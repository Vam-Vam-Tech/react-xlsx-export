{"version":3,"file":"index.js","sources":["../src/lib/Saver.ts","../src/lib/ExcelExport.ts","../src/lib/CsvExport.ts","../src/index.tsx"],"sourcesContent":["import { saveAs } from \"file-saver\";\nimport { ISaver } from \"../types\";\n\nconst saver = ({ name, file, type, extension }: ISaver) => {\n\tconst data = new Blob([file], { type: type });\n\tsaveAs(data, name + extension);\n};\n\nexport default saver;\n","import * as XLSX from \"xlsx\";\nimport { IExportExcel } from \"../types\";\nimport saver from \"./Saver\";\n\nconst exportExcel = ({ data, name }: IExportExcel) => {\n\tconst fileType =\n\t\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n\tconst fileExtension = \".xlsx\";\n\tconst ws = XLSX.utils.json_to_sheet(data);\n\tconst wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n\tconst excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n\tsaver({ name, file: excelBuffer, type: fileType, extension: fileExtension });\n};\n\nexport default exportExcel;\n","import { IExportExcel } from \"../types\";\nimport saver from \"./Saver\";\n// import * as FileSaver from \"file-saver\";\n\nconst exportCsv = ({ data, name }: IExportExcel) => {\n  // let csvData: string = \"\";\n\n  const fileType = \"data:text/plain;charset=utf-8\";\n  const fileExtension = \".csv\";\n\n  //   const deviceFiltererForCsv = () => {\n  //     let csv: any = \"\";\n  //     let headers = `${Object.keys(data[0]).join()},\\r\\n`;\n  //     csv += headers;\n  //     if (data.length > 0) {\n  //       for (let i = 0; i < data.length; i++) {\n  //         const tmpDevice: any = data[i];\n  //         console.log(tmpDevice);\n  //         csv += `${tmpDevice.firstName},${tmpDevice?.lastName},${tmpDevice?.email},\\r\\n`;\n  //       }\n  //     }\n  //     return csv;\n  //   };\n\n  //   const exportToCsv = ({ jsonData, fileName }: any) => {\n  //     const data = new Blob([jsonData], {\n  //       type: \"data:text/plain;charset=utf-8\",\n  //     });\n\n  //     FileSaver.saveAs(data, fileName + \".csv\");\n  //   };\n\n  //   const fn = async () => {\n  //     const csvFormattedData = await deviceFiltererForCsv();\n\n  //     exportToCsv({\n  //       jsonData: csvFormattedData,\n  //       fileName: \"TEST\",\n  //     });\n  //   };\n\n  //   fn();\n\n  saver({ name, file: data, type: fileType, extension: fileExtension });\n};\n\nexport default exportCsv;\n","import * as React from \"react\";\nimport \"./styles.scss\";\nimport { IReactXlsxExport } from \"./types\";\nimport exportExcel from \"./lib/ExcelExport\";\nimport exportCsv from \"./lib/CsvExport\";\n\nconst ReactXlsxExport: React.FC<IReactXlsxExport> = ({\n  data,\n  filename,\n  className,\n  children,\n  exportType,\n  styles,\n}) => {\n  const handleExport = () => {\n    if (exportType === \"csv\") {\n      exportCsv({ data: data, name: filename });\n    } else {\n      exportExcel({ data: data, name: filename });\n    }\n  };\n\n  return (\n    <button\n      className={className ? className : \"react-xlsx-export-btn\"}\n      style={styles}\n      onClick={handleExport}\n    >\n      {children ? children : \"Export\"}\n    </button>\n  );\n};\n\nexport default ReactXlsxExport;\nexport { exportExcel, exportCsv };\n"],"names":["saveAs","XLSX.utils","XLSX.write","React.createElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA,IAAM,KAAK,GAAG,UAAC,EAAuC;QAArC,cAAI,EAAE,cAAI,EAAE,cAAI,EAAE,wBAAS;IAC3C,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9CA,gBAAM,CAAC,IAAI,EAAE,IAAI,GAAG,SAAS,CAAC,CAAC;AAChC,CAAC,CAAC;;ACFF,IAAM,WAAW,GAAG,UAAC,EAA4B;QAA1B,cAAI,EAAE,cAAI;IAChC,IAAM,QAAQ,GACb,iFAAiF,CAAC;IACnF,IAAM,aAAa,GAAG,OAAO,CAAC;IAC9B,IAAM,EAAE,GAAGC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAM,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;IAC1D,IAAM,WAAW,GAAGC,UAAU,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IACxE,KAAK,CAAC,EAAE,IAAI,MAAA,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC;AAC9E,CAAC,CAAC;;ACVF;AAEA,IAAM,SAAS,GAAG,UAAC,EAA4B;;QAA1B,cAAI,EAAE,cAAI;IAG7B,IAAM,QAAQ,GAAG,+BAA+B,CAAC;IACjD,IAAM,aAAa,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmC7B,KAAK,CAAC,EAAE,IAAI,MAAA,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC,CAAC;AACxE,CAAC,CAAC;;ACtCF,IAAM,eAAe,GAA+B,UAAC,EAOpD;QANC,cAAI,EACJ,sBAAQ,EACR,wBAAS,EACT,sBAAQ,EACR,0BAAU,EACV,kBAAM;IAEN,IAAM,YAAY,GAAG;QACnB,IAAI,UAAU,KAAK,KAAK,EAAE;YACxB,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;SAC3C;aAAM;YACL,WAAW,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;SAC7C;KACF,CAAC;IAEF,QACEC,gCACE,SAAS,EAAE,SAAS,GAAG,SAAS,GAAG,uBAAuB,EAC1D,KAAK,EAAE,MAAM,EACb,OAAO,EAAE,YAAY,IAEpB,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CACxB,EACT;AACJ,CAAC,CAAC;;;;;;"}